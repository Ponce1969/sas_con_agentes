[project]
name = "neural-saas-platform"
version = "0.1.0"
description = "Plataforma SaaS de Agentes de IA para análisis de código Python"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Neural SaaS Team"}
]

dependencies = [
    # Backend - FastAPI y servidor
    "fastapi==0.109.0",
    "uvicorn[standard]==0.27.0",
    "pydantic==2.5.3",
    "pydantic-settings==2.1.0",
    
    # Base de datos
    "sqlalchemy==2.0.25",
    "asyncpg==0.29.0",
    "alembic==1.13.1",
    
    # Seguridad
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.6",
    
    # HTTP Client
    "httpx==0.26.0",
    "requests==2.31.0",
    
    # Utilidades
    "python-dotenv==1.0.0",
    "redis==5.0.1",
    "celery==5.3.6",
    
    # Google Gemini
    "google-generativeai==0.3.2",
    
    # Logging y monitoreo
    "loguru==0.7.2",
    
    # Frontend - Streamlit
    "streamlit==1.30.0",
    
    # Visualización
    "plotly==5.18.0",
    "pandas==2.1.4",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "black==23.12.1",
    "ruff==0.1.9",
    "mypy==1.8.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend", "frontend"]

[tool.ruff]
line-length = 100
target-version = "py312"

# Reglas activadas según Practicas_Python.md
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort (imports ordenados)
    "N",   # pep8-naming (snake_case obligatorio)
    "W",   # pycodestyle warnings
    "UP",  # pyupgrade (Python 3.12+)
    "B",   # flake8-bugbear (bugs comunes)
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]

ignore = [
    "E501",  # line too long (manejado por black)
]

# Configuración de imports (isort)
[tool.ruff.isort]
known-first-party = ["app", "backend", "frontend"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

# Configuración de naming (snake_case obligatorio)
[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod"]

[tool.black]
line-length = 100
target-version = ["py312"]
skip-string-normalization = false

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

# Ignorar imports de terceros sin tipos
[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "plotly.*",
    "google.generativeai.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
